<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
    "http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html><HEAD>
    <title>API Documentation</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <meta name="generator" content="HeaderDoc" />
<style type="text/css"><!--.keyword {background:#ffffff; color:#761550;}.template {background:#ffffff; color:#761550;}.number {background: #ffffff; color:#0000ff;}.function {background:#ffffff; color:#000000;}.string {background: #ffffff; color:#891315;}.preprocessor {background:#ffffff; color:#236e25}.comment {background:#ffffff; color:#236e25}.char {background: #ffffff; color:#0000ff;}.var {background:#ffffff; color:#000000;}.type {background:#ffffff; color:#761550;}.param {background:#ffffff; color:#000000;}a:link {text-decoration: none; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: small; color: #0000ff;}a:visited {text-decoration: none; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: small; color: #0000ff;}a:visited:hover {text-decoration: underline; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: small; color: #ff6600;}a:active {text-decoration: none; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: small; color: #ff6600;}a:hover {text-decoration: underline; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: small; color: #ff6600;}h4 {text-decoration: none; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: tiny; font-weight: bold;}body {text-decoration: none; font-family: lucida grande, geneva, helvetica, arial, sans-serif; font-size: 10pt;}--></style></HEAD>
<BODY bgcolor="#ffffff">
<a name="top"></a>
<H1>Photon.h</H1><hr>
<p></p>
<b>Includes:</b> <!-- a logicalPath="//apple_ref/doc/header/list" -->&lt;list&gt;<!-- /a -->,
<!-- a logicalPath="//apple_ref/doc/header/mydebug.h" -->"mydebug.h"<!-- /a -->,
<!-- a logicalPath="//apple_ref/doc/header/StokesV.h" -->"StokesV.h"<!-- /a -->,
<!-- a logicalPath="//apple_ref/doc/header/RealV.h" -->"RealV.h"<!-- /a -->,
<!-- a logicalPath="//apple_ref/doc/header/MuellerM.h" -->"MuellerM.h"<!-- /a -->,
<!-- a logicalPath="//apple_ref/doc/header/MCObject.h" -->"MCObject.h"<!-- /a --><br>
<p></p><dl></dl><p></p>
<hr><br>
This file contains the core of the photon propagation code.
Various formalisms have been presented in the literature.
The original references upon which this code is based are:
<br><br>
"Monte Carlo simulations of the diffuse backscattering 
Mueller matrix for highly scattering media", Bartel & Hielscher
Appl. Opt. Vol 39, April 1st 2000, p. 1580
<br><br>
"Characterizing mammalian cells and cell phantoms by 
polarized backscatterng fiber-optic measurements"
J. Mourant, T. Johnson, J. Freyer
Appl. Opt. Vol 40, No8 Oct 2001, p. 5114
<br><br>
"Description and time reduction of a Monte Carlo code ...",
F. Jaillon, H. Saint Jalmes
Appl. Opt. Vol 42, no 16, p.3290
<br><br>
which are themselves loosely based on code from Wang and Jacques
<br><br>
"MCML-Monte Carlo modeling of light transport" in Optical-Thermal
response of laser irradiated tissue, A. J. Welch M. van Gemert 
pp. 73-100 http://omlc.ogi.edu/software/mc/index.html
<br><br>
<br><br>
This C/C++ file contains both formalisms and it is possible to use one
or the other at run time. This allows you to compare the results from
either formalism. This is done by defining  distinct Photon classes
for Bartel, Cote, Jaillon and Mourant.  Although the variables (i.e. reference frames)
are conceptually the same, the notation used in both papers is
different.
<br><br>
The goal of this code is to be correct and expandable, not necessarily fast.
In debug mode, there are tons of consistency checks that are done with various
functions that end with a "_". These functions do their check if
__MYDEBUG is defined and do absolutely nothing if __MYDEBUG is not
defined.  Hence: it does not hurt to have them everywhere since they will not do
anything in  the final version.
The idea is therefore to check that the code is right by
running a few test simulations with __MYDEBUG defined, then do "the real
stuff" without __MYDEBUG.
The ./configure script provides a --enable-debug option which does just that.
<br><br>
If one wanted to make a class called  PhotonFast, the variable functions
could be rewritten and optimized.
<br><br>
<p></p><hr><br><center>Last Updated: Tuesday, June 30, 2009
<br><font size="-1">HTML documentation generated by <a href="http://www.opensource.apple.com/projects" target="_blank">HeaderDoc</a></font>
</center>
</body>
</html>
